@startuml
/' 
https://docs.google.com/document/d/1rK-ZwQNSjzt7lfvTaTGPRCxSj92hN_QhE0vIYjlyek8/edit?tab=t.0
'/

class DirectorDeSandwichs <<Director>>{

    +<<create>> DirectorDeSandwichs(constructor : Constructor)
    +construirSandwich(constructor : Constructor) : Sandwich
}

class Sandwich {
    +addElemento(e : Elemento)
}

abstract class Elemento {
    -nombre : String
    -precio : Real
    +<<create>>Elemento(nombre : String, precio : Real)
}

class Pan extends Elemento{
    +<<create>> Pan(nombre : String, precio : Real)
}

class Aderezo extends Elemento{
    +<<create>> Aderezo(nombre : String, precio : Real)
}

class Principal extends Elemento{
    +<<create>> Principal(nombre : String, precio : Real)
}

class Adicional extends Elemento{
    +<<create>> Adicional(nombre : String, precio : Real)
}

interface ConstructorDeSandwich <<Builder>>{
    +construirPan(Sandwich s)
    +construirAderezo(Sandwich s)
    +construirPrincipal(Sandwich s)
    +construirAdicional(Sandwich s)
}

class ConstructorDeClasico <<ConcreteBuilder>> implements ConstructorDeSandwich{
    +construirPan(Sandwich s)
    +construirAderezo(Sandwich s)
    +construirPrincipal(Sandwich s)
    +construirAdicional(Sandwich s)
}

class ConstructorDeVegetariano <<ConcreteBuilder>> implements ConstructorDeSandwich{
    +construirPan(Sandwich s)
    +construirAderezo(Sandwich s)
    +construirPrincipal(Sandwich s)
    +construirAdicional(Sandwich s)

}

class ConstructorDeVegano <<ConcreteBuilder>> implements ConstructorDeSandwich{
    +construirPan(Sandwich s)
    +construirAderezo(Sandwich s)
    +construirPrincipal(Sandwich s)
    +construirAdicional(Sandwich s)
}

class ConstructorDeSinTacc <<ConcreteBuilder>> implements ConstructorDeSandwich{
    +construirPan(Sandwich s)
    +construirAderezo(Sandwich s)
    +construirPrincipal(Sandwich s)
    +construirAdicional(Sandwich s)
}


DirectorDeSandwichs --> ConstructorDeSandwich
Sandwich --> "2..4" Elemento
DirectorDeSandwichs -.-.> Sandwich

@enduml
