@startuml
/' 
Puede ser que sea un builder ? Ni, hasta ahora no es necesario.
Habilidad no influye en nada ni se planifica para el futuro.
'/

abstract class Personaje {
  -nombre : String
  -habilidad : String
  -puntosDeVida : Real

  +enfrentamientoVs (p : Personaje)
     /'  '/

}

class Mago extends Personaje {
}

class Guerrero extends Personaje {
}

class Arquero extends Personaje {
}

abstract class Arma {
  +atacarArmadura(arm : Armadura)

  + <<abstract>> atacarArmaduraDeCuero()
  + <<abstract>> atacarArmaduraDeAcero()
  + <<abstract>> atacarArmaduraDeHierro()
}

abstract class Armadura {

  +recibirDa単oDe(ar : Arma)  : Integer
      /' return ar.atacarArmadura(this) '/

  + <<abstract>> recibirDa単oDeEspada() : Integer
  + <<abstract>> recibirDa単oDeArco() : Integer
  + <<abstract>> recibirDa単oDeBaston() : Integer
  
}

class Espada extends Arma {


}

class Arco extends Arma {

}

class Baston extends Arma {

}

class ArmaduraCuero extends Armadura {

}

class ArmaduraAcero extends Armadura {

}

class ArmaduraHierro extends Armadura {

}


Personaje --> Armadura
Personaje --> Arma
@enduml
