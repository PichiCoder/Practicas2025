@startuml

/'se trata de estados, por como esta la excursion. 
Provisoria cuando aun no alcanzo cupo minimo 
Definitiva cuando se alcanzo el minimo '/

class Excursion <<Context>>{
    -nombre : String
    -fechaInicio : LocalDate
    -fechaFin : LocalDate
    -puntoEncuentro : String
    -costo : Real
    -cupoMin : Integer
    -cupoMax : Integer

    +informacionAcercaDeMi () : String
        /'retorna lo que devuelva "this.estado.otorgarInformacion(ex : Excursion)", que depende del estado'/
        
    +<<create>> Excursion(nombre : String ... cupoMax : Integer)
}

abstract class EstadoExcursion <<State>> {
    
    #informacionBasica(ex : Excursion) : String
    #<<abstract>>informacionParticularDelEstado(ex : Excursion) : String

    +otorgarInformacion(ex : Excursion) : String
        /'nombre, costo, fechas y punto de encuentro se retornan siempre
         usando informacionBasica() y el resto lo implementa cada estado'/
}
note left of EstadoExcursion::"otorgarInformacion(ex : Excursion)"
template method
end note

note left of EstadoExcursion::"informacionParticularDelEstado(ex : Excursion)"
hook method
end note

class ExcursionProvisoria <<ConcreteState>> extends EstadoExcursion {
    -informacionParticularDelEstado(ex : Excursion) : String
        /' cantidad de usuarios faltantes para alcanzar el cupo mínimo.'/
}

abstract class ExcursionDefinitiva extends EstadoExcursion{
    +<<abstract>> otorgarInformacion(ex : Excursion) : String
        
}

class ExcursionDefinitivaCupoCompleto <<ConcreteState>> extends ExcursionDefinitiva {
    -informacionParticularDelEstado(ex : Excursion) : String
        /' vacio porque es igual que lo basico'/
}

class ExcursionDefinitivaCupoIncompleto <<ConcreteState>> extends ExcursionDefinitiva {
    -informacionParticularDelEstado(ex : Excursion) : String
        /'los mails de los usuarios inscriptos
         y cantidad de usuarios faltantes para alcanzar el cupo máximo.'/
}

class Usuario {
    -nombre : String
    -apellido : String
    -email : String

    +<<create>> Usuario (nombre, apellido, email)
    +inscribirmeEnExcursion(e : Excursion)
    
}

Excursion --> "estado 1" EstadoExcursion
Excursion --> "inscriptos *" Usuario
Excursion --> "listaDeEspera *" Usuario
@enduml