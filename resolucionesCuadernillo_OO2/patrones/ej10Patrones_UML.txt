@startuml
/' 
https://docs.google.com/document/d/1rK-ZwQNSjzt7lfvTaTGPRCxSj92hN_QhE0vIYjlyek8/edit?tab=t.0
'/

/' 
Si se trata de un builder, supongo que el producto es el mensaje cifrado o descifrado.
El mensajero seria el Cliente ?
El MecanismoDeCifrado es el director ?
El constructor quien seria ? 
 '/

class Mensajero <<Context>>{ 
    
    +enviar(mensaje : String)
    +recibir(mensaje : String)
    +setMecanismoCifrado( mc : MecanismoDeCifrado)

}

interface MecanismoDeCifrado <<Strategy>> {

    +encriptar(mensaje : String) : String
    +desencriptar(mensaje : String) : String
}

class FeistelCipherAdapter <<ConcreteStrategy>> implements MecanismoDeCifrado {
    +<<create>> FeistelCipherAdapter (key : String)
    +encriptar(mensaje : String) : String
    +desencriptar(mensaje : String) : String
}

class RC4Adapter <<ConcreteStrategy>> implements MecanismoDeCifrado  {
    +<<create>> RC4Adapter (key : String)
    +encriptar(mensaje : String) : String
    +desencriptar(mensaje : String) : String
}

class FeistelCipher {
    -key : String

    +<<create>> FeistelCipher(key : String)
    +encode(message : String) : String
}

class RC4 {
    +encriptar(message : String, key : String) : String
    +desencriptar(mensajeCifrado : String, key : String) : String
}


Mensajero --> MecanismoDeCifrado
FeistelCipherAdapter --> FeistelCipher
RC4Adapter --> RC4

@enduml