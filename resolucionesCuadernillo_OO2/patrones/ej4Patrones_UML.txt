@startuml
class ToDoItem <<Context>>{
  -name : String
  -comentario : String
  -inicio : LocalDate
  -fin : LocalDate

  +<<create>> ToDoItem(name : String)
  +start()
  +togglePause()
  +finish()
  +workedTime() : Duration
  +addComment(comment : String)
}

abstract class State <<State>> {
  +<<abstract>> handleStart() : State
  +<<abstract>> handleTogglePause() : State
  +<<abstract>> handleFinish() : State

  +handleWorkedTime(inicio : LocalDate) : Duration 
	+handleComment(c : String) : String
}

class PendingState <<Concrete State>>{
  +handleStart() : State
  +handleTogglePause() : State
  +handleFinish() : State

  +handleWorkedTime(inicio : LocalDate) : Duration 
}

class InProgressState <<Concrete State>>{
  +handleStart() : State
  +handleTogglePause() : State
  +handleFinish() : State
}

class PausedState <<Concrete State>>{
  +handleStart() : State
  +handleTogglePause() : State
  +handleFinish() : State
}

class FinishedState <<Concrete State>>{
  +handleStart() : State
  +handleTogglePause() : State
  +handleFinish() : State

	+handleComment(c : String) : String
}

ToDoItem --> State

State <|-- PendingState
State <|-- FinishedState
State <|-- PausedState
State <|-- InProgressState
@enduml
